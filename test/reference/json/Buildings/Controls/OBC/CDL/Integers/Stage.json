{
  "within": "Buildings.Controls.OBC.CDL.Integers",
  "class_definition": [
    {
      "class_prefixes": "block",
      "class_specifier": {
        "long_class_specifier": {
          "identifier": "Stage",
          "description_string": "Output total stages that should be enabled",
          "composition": {
            "element_list": [
              {
                "component_clause": {
                  "type_prefix": "parameter",
                  "type_specifier": "Integer",
                  "component_list": [
                    {
                      "declaration": {
                        "identifier": "n",
                        "modification": {
                          "class_modification": [
                            {
                              "element_modification_or_replaceable": {
                                "final": true,
                                "element_modification": {
                                  "name": "min",
                                  "modification": {
                                    "equal": true,
                                    "expression": {
                                      "simple_expression": "1"
                                    }
                                  }
                                }
                              }
                            }
                          ]
                        }
                      },
                      "description": {
                        "description_string": "Number of stages that could be enabled"
                      }
                    }
                  ]
                }
              },
              {
                "component_clause": {
                  "type_prefix": "parameter",
                  "type_specifier": "Real",
                  "component_list": [
                    {
                      "declaration": {
                        "identifier": "holdDuration",
                        "modification": {
                          "class_modification": [
                            {
                              "element_modification_or_replaceable": {
                                "final": true,
                                "element_modification": {
                                  "name": "quantity",
                                  "modification": {
                                    "equal": true,
                                    "expression": {
                                      "simple_expression": "\"Time\""
                                    }
                                  }
                                }
                              }
                            },
                            {
                              "element_modification_or_replaceable": {
                                "final": true,
                                "element_modification": {
                                  "name": "unit",
                                  "modification": {
                                    "equal": true,
                                    "expression": {
                                      "simple_expression": "\"s\""
                                    }
                                  }
                                }
                              }
                            },
                            {
                              "element_modification_or_replaceable": {
                                "element_modification": {
                                  "name": "min",
                                  "modification": {
                                    "equal": true,
                                    "expression": {
                                      "simple_expression": "0"
                                    }
                                  }
                                }
                              }
                            }
                          ]
                        }
                      },
                      "description": {
                        "description_string": "Minimum time that the output needs to be held constant. Set to 0 to disable hold time"
                      }
                    }
                  ]
                }
              },
              {
                "component_clause": {
                  "type_prefix": "parameter",
                  "type_specifier": "Real",
                  "component_list": [
                    {
                      "declaration": {
                        "identifier": "h",
                        "modification": {
                          "class_modification": [
                            {
                              "element_modification_or_replaceable": {
                                "element_modification": {
                                  "name": "min",
                                  "modification": {
                                    "equal": true,
                                    "expression": {
                                      "simple_expression": "0.001/n"
                                    }
                                  }
                                }
                              }
                            },
                            {
                              "element_modification_or_replaceable": {
                                "element_modification": {
                                  "name": "max",
                                  "modification": {
                                    "equal": true,
                                    "expression": {
                                      "simple_expression": "0.5/n"
                                    }
                                  }
                                }
                              }
                            }
                          ],
                          "equal": true,
                          "expression": {
                            "simple_expression": "0.02/n"
                          }
                        }
                      },
                      "description": {
                        "description_string": "Hysteresis for comparing input with threshold"
                      }
                    }
                  ]
                }
              },
              {
                "component_clause": {
                  "type_prefix": "parameter",
                  "type_specifier": "Integer",
                  "component_list": [
                    {
                      "declaration": {
                        "identifier": "pre_y_start",
                        "modification": {
                          "equal": true,
                          "expression": {
                            "simple_expression": "0"
                          }
                        }
                      },
                      "description": {
                        "description_string": "Value of pre(y) at initial time"
                      }
                    }
                  ]
                }
              },
              {
                "component_clause": {
                  "type_specifier": "Buildings.Controls.OBC.CDL.Interfaces.RealInput",
                  "component_list": [
                    {
                      "declaration": {
                        "identifier": "u",
                        "modification": {
                          "class_modification": [
                            {
                              "element_modification_or_replaceable": {
                                "final": true,
                                "element_modification": {
                                  "name": "min",
                                  "modification": {
                                    "equal": true,
                                    "expression": {
                                      "simple_expression": "0"
                                    }
                                  }
                                }
                              }
                            },
                            {
                              "element_modification_or_replaceable": {
                                "final": true,
                                "element_modification": {
                                  "name": "max",
                                  "modification": {
                                    "equal": true,
                                    "expression": {
                                      "simple_expression": "1"
                                    }
                                  }
                                }
                              }
                            }
                          ]
                        }
                      },
                      "description": {
                        "description_string": "Input between 0 and 1 for specifying stages",
                        "annotation": [
                          {
                            "element_modification_or_replaceable": {
                              "element_modification": {
                                "Placement": {
                                  "transformation": {
                                    "extent": [
                                      {
                                        "x": -140,
                                        "y": -20
                                      },
                                      {
                                        "x": -100,
                                        "y": 20
                                      }
                                    ]
                                  },
                                  "iconTransformation": {
                                    "extent": [
                                      {
                                        "x": -140,
                                        "y": -20
                                      },
                                      {
                                        "x": -100,
                                        "y": 20
                                      }
                                    ]
                                  }
                                }
                              }
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              },
              {
                "component_clause": {
                  "type_specifier": "Buildings.Controls.OBC.CDL.Interfaces.IntegerOutput",
                  "component_list": [
                    {
                      "declaration": {
                        "identifier": "y",
                        "modification": {
                          "class_modification": [
                            {
                              "element_modification_or_replaceable": {
                                "final": true,
                                "element_modification": {
                                  "name": "min",
                                  "modification": {
                                    "equal": true,
                                    "expression": {
                                      "simple_expression": "1"
                                    }
                                  }
                                }
                              }
                            },
                            {
                              "element_modification_or_replaceable": {
                                "final": true,
                                "element_modification": {
                                  "name": "max",
                                  "modification": {
                                    "equal": true,
                                    "expression": {
                                      "simple_expression": "n"
                                    }
                                  }
                                }
                              }
                            }
                          ]
                        }
                      },
                      "description": {
                        "description_string": "Total number of stages that should be enabled",
                        "annotation": [
                          {
                            "element_modification_or_replaceable": {
                              "element_modification": {
                                "Placement": {
                                  "transformation": {
                                    "extent": [
                                      {
                                        "x": 100,
                                        "y": -20
                                      },
                                      {
                                        "x": 140,
                                        "y": 20
                                      }
                                    ]
                                  },
                                  "iconTransformation": {
                                    "extent": [
                                      {
                                        "x": 100,
                                        "y": -20
                                      },
                                      {
                                        "x": 140,
                                        "y": 20
                                      }
                                    ]
                                  }
                                }
                              }
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            ],
            "element_sections": [
              {
                "protected_element_list": [
                  {
                    "final": true,
                    "component_clause": {
                      "type_prefix": "parameter",
                      "type_specifier": "Real",
                      "component_list": [
                        {
                          "declaration": {
                            "identifier": "staThr",
                            "array_subscripts": [
                              {
                                "expression": {
                                  "simple_expression": "n"
                                }
                              }
                            ],
                            "modification": {
                              "equal": true,
                              "expression": {
                                "simple_expression": {
                                  "for_loop": {
                                    "expression": {
                                      "simple_expression": "(i -1)/n"
                                    },
                                    "for_loop": [
                                      {
                                        "name": "i",
                                        "range": "1:n"
                                      }
                                    ]
                                  }
                                }
                              }
                            }
                          },
                          "description": {
                            "description_string": "Stage thresholds"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "component_clause": {
                      "type_prefix": "discrete",
                      "type_specifier": "Real",
                      "component_list": [
                        {
                          "declaration": {
                            "identifier": "tNext",
                            "modification": {
                              "class_modification": [
                                {
                                  "element_modification_or_replaceable": {
                                    "final": true,
                                    "element_modification": {
                                      "name": "unit",
                                      "modification": {
                                        "equal": true,
                                        "expression": {
                                          "simple_expression": "\"s\""
                                        }
                                      }
                                    }
                                  }
                                }
                              ]
                            }
                          },
                          "description": {
                            "description_string": "Next instant at which the block checks if it has passed the minimum hold time"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "component_clause": {
                      "type_prefix": "discrete",
                      "type_specifier": "Real",
                      "component_list": [
                        {
                          "declaration": {
                            "identifier": "upperThreshold"
                          },
                          "description": {
                            "description_string": "Current upper bound of the stage range which the input is in"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "component_clause": {
                      "type_prefix": "discrete",
                      "type_specifier": "Real",
                      "component_list": [
                        {
                          "declaration": {
                            "identifier": "lowerThreshold"
                          },
                          "description": {
                            "description_string": "Current lower bound of the stage range which the input is in"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "component_clause": {
                      "type_specifier": "Boolean",
                      "component_list": [
                        {
                          "declaration": {
                            "identifier": "checkUpper"
                          },
                          "description": {
                            "description_string": "Check if the input value is greater than the upper bound"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "component_clause": {
                      "type_specifier": "Boolean",
                      "component_list": [
                        {
                          "declaration": {
                            "identifier": "checkLower"
                          },
                          "description": {
                            "description_string": "Check if the input value is greater than the lower bound"
                          }
                        }
                      ]
                    }
                  }
                ]
              },
              {
                "equation_section": {
                  "initial": true,
                  "equation": [
                    {
                      "assignment_equation": {
                        "lhs": "upperThreshold",
                        "rhs": {
                          "simple_expression": "0"
                        }
                      }
                    },
                    {
                      "assignment_equation": {
                        "lhs": "lowerThreshold",
                        "rhs": {
                          "simple_expression": "0"
                        }
                      }
                    },
                    {
                      "assignment_equation": {
                        "lhs": {
                          "function_call": {
                            "name": "pre",
                            "arguments": [
                              {
                                "name": "checkUpper"
                              }
                            ]
                          }
                        },
                        "rhs": {
                          "simple_expression": "false"
                        }
                      }
                    },
                    {
                      "assignment_equation": {
                        "lhs": {
                          "function_call": {
                            "name": "pre",
                            "arguments": [
                              {
                                "name": "checkLower"
                              }
                            ]
                          }
                        },
                        "rhs": {
                          "simple_expression": "true"
                        }
                      }
                    },
                    {
                      "assignment_equation": {
                        "lhs": "tNext",
                        "rhs": {
                          "simple_expression": "time +holdDuration"
                        }
                      }
                    },
                    {
                      "assignment_equation": {
                        "lhs": {
                          "function_call": {
                            "name": "pre",
                            "arguments": [
                              {
                                "name": "y"
                              }
                            ]
                          }
                        },
                        "rhs": {
                          "simple_expression": "pre_y_start"
                        }
                      }
                    }
                  ]
                }
              },
              {
                "equation_section": {
                  "equation": [
                    {
                      "assignment_equation": {
                        "lhs": "checkUpper",
                        "rhs": {
                          "simple_expression": "not pre(checkUpper) and ([object Object]) or pre(checkUpper) and ([object Object])"
                        }
                      }
                    },
                    {
                      "assignment_equation": {
                        "lhs": "checkLower",
                        "rhs": {
                          "simple_expression": "not pre(checkLower) and ([object Object]) or pre(checkLower) and ([object Object])"
                        }
                      }
                    },
                    {
                      "when_equation": [
                        {
                          "condition": {
                            "simple_expression": "([object Object])"
                          },
                          "then": [
                            {
                              "assignment_equation": {
                                "lhs": "tNext",
                                "rhs": {
                                  "simple_expression": "time +holdDuration"
                                }
                              }
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              }
            ],
            "annotation": [
              {
                "element_modification_or_replaceable": {
                  "element_modification": {
                    "name": "defaultComponentName",
                    "modification": {
                      "equal": true,
                      "expression": {
                        "simple_expression": "\"sta\""
                      }
                    }
                  }
                }
              },
              {
                "element_modification_or_replaceable": {
                  "element_modification": {
                    "name": "Icon",
                    "modification": {
                      "class_modification": [
                        {
                          "element_modification_or_replaceable": {
                            "element_modification": {
                              "coordinateSystem": {
                                "extent": [
                                  {
                                    "x": -100,
                                    "y": -100
                                  },
                                  {
                                    "x": 100,
                                    "y": 100
                                  }
                                ],
                                "preserveAspectRatio": "false"
                              }
                            }
                          }
                        },
                        {
                          "element_modification_or_replaceable": {
                            "element_modification": {
                              "graphics": [
                                {
                                  "name": "Rectangle",
                                  "attribute": {
                                    "extent": [
                                      {
                                        "x": -100,
                                        "y": 100
                                      },
                                      {
                                        "x": 100,
                                        "y": -100
                                      }
                                    ],
                                    "borderPattern": "BorderPattern.Raised",
                                    "lineColor": {
                                      "r": 0,
                                      "g": 0,
                                      "b": 0
                                    },
                                    "fillColor": {
                                      "r": 255,
                                      "g": 213,
                                      "b": 170
                                    },
                                    "fillPattern": "FillPattern.Solid",
                                    "lineThickness": 5
                                  }
                                },
                                {
                                  "name": "Text",
                                  "attribute": {
                                    "extent": [
                                      {
                                        "x": -100,
                                        "y": 140
                                      },
                                      {
                                        "x": 100,
                                        "y": 100
                                      }
                                    ],
                                    "textString": "\"%name\"",
                                    "textColor": {
                                      "r": 0,
                                      "g": 0,
                                      "b": 255
                                    }
                                  }
                                },
                                {
                                  "name": "Text",
                                  "attribute": {
                                    "extent": [
                                      {
                                        "x": -98,
                                        "y": 14
                                      },
                                      {
                                        "x": -54,
                                        "y": -12
                                      }
                                    ],
                                    "textString": "DynamicSelect(\"\",String(u",
                                    "textColor": {
                                      "r": 0,
                                      "g": 0,
                                      "b": 0
                                    }
                                  }
                                },
                                {
                                  "name": "Text",
                                  "attribute": {
                                    "extent": [
                                      {
                                        "x": 56,
                                        "y": 16
                                      },
                                      {
                                        "x": 100,
                                        "y": -10
                                      }
                                    ],
                                    "textString": "DynamicSelect(\"\",String(y",
                                    "textColor": {
                                      "r": 0,
                                      "g": 0,
                                      "b": 0
                                    }
                                  }
                                },
                                {
                                  "name": "Text",
                                  "attribute": {
                                    "extent": [
                                      {
                                        "x": -62,
                                        "y": 70
                                      },
                                      {
                                        "x": 64,
                                        "y": 100
                                      }
                                    ],
                                    "textString": ",textString=",
                                    "textColor": {
                                      "r": 0,
                                      "g": 0,
                                      "b": 0
                                    }
                                  }
                                },
                                {
                                  "name": "Line",
                                  "attribute": {
                                    "points": [
                                      {
                                        "x": -60,
                                        "y": -60
                                      },
                                      {
                                        "x": -40,
                                        "y": -60
                                      },
                                      {
                                        "x": -40,
                                        "y": -20
                                      },
                                      {
                                        "x": 0,
                                        "y": -20
                                      },
                                      {
                                        "x": 0,
                                        "y": 20
                                      },
                                      {
                                        "x": 40,
                                        "y": 20
                                      },
                                      {
                                        "x": 40,
                                        "y": 60
                                      },
                                      {
                                        "x": 60,
                                        "y": 60
                                      }
                                    ],
                                    "color": {
                                      "r": 0,
                                      "g": 0,
                                      "b": 0
                                    },
                                    "thickness": 0.5
                                  }
                                },
                                {
                                  "name": "Line",
                                  "attribute": {
                                    "points": [
                                      {
                                        "x": -80,
                                        "y": -60
                                      },
                                      {
                                        "x": 40,
                                        "y": 60
                                      }
                                    ],
                                    "color": {
                                      "r": 0,
                                      "g": 0,
                                      "b": 0
                                    },
                                    "pattern": "LinePattern.Dash",
                                    "thickness": 0.5
                                  }
                                }
                              ]
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              },
              {
                "element_modification_or_replaceable": {
                  "element_modification": {
                    "name": "Diagram",
                    "modification": {
                      "class_modification": [
                        {
                          "element_modification_or_replaceable": {
                            "element_modification": {
                              "coordinateSystem": {
                                "extent": [
                                  {
                                    "x": -100,
                                    "y": -100
                                  },
                                  {
                                    "x": 100,
                                    "y": 100
                                  }
                                ],
                                "preserveAspectRatio": "false"
                              }
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              },
              {
                "element_modification_or_replaceable": {
                  "element_modification": {
                    "name": "Documentation",
                    "modification": {
                      "class_modification": [
                        {
                          "element_modification_or_replaceable": {
                            "element_modification": {
                              "name": "info",
                              "modification": {
                                "equal": true,
                                "expression": {
                                  "simple_expression": "\"<html>\n<p>\nBlock that outputs the total number of stages to be enabled.\n</p>\n<p>\nThe block compares the input <code>u</code> with the threshold of each stage. If the input is greater\nthan a stage threshold, the output is set to that stage.\nThe block outputs the total number of stages to be enabled.\n</p>\n<p>\nThe parameter <code>n</code> specifies the maximum number of stages.\nThe stage thresholds are evenly distributed, i.e. the thresholds\nfor stages <code>[1, 2, 3, ... , n]</code> are\n<code>[0, 1/n, 2/n, ... , (n-1)/n]</code>, plus a hysteresis which is by default\n<code>h=0.02/n</code>.\nOnce the output changes, it cannot change for at least <codE>holdDuration</code> seconds.\n</p>\n</html>\""
                                }
                              }
                            }
                          }
                        },
                        {
                          "element_modification_or_replaceable": {
                            "element_modification": {
                              "name": "revisions",
                              "modification": {
                                "equal": true,
                                "expression": {
                                  "simple_expression": "\"<html>\n<ul>\n<li>\nMarch 3, 2023, by Michael Wetter:<br/>\nRevised implementation.\n</li>\n<li>\nSeptember 8, 2022, by Jianjun Hu:<br/>\nFirst implementation.<br/>\nThis is for <a href=\\\"https://github.com/lbl-srg/modelica-buildings/issues/3103\\\">Buildings, issue 3103</a>.\n</li>\n</ul>\n</html>\""
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            ]
          }
        }
      }
    }
  ],
  "modelicaFile": "Buildings/Controls/OBC/CDL/Integers/Stage.mo",
  "fullMoFilePath": "/Users/akprakash/Programming/modelica/modelica-buildings/Buildings/Controls/OBC/CDL/Integers/Stage.mo",
  "checksum": "1d5dfcbe3d51413f1ef37c871482df3a"
}